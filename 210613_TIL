어레이는 조회에 유용 e.g. 캡슐호텔 소녀시대 (이렇게 써놓으니까 뭔가 웃긴데 이해잘됨)
링크드리스트는 삽입과 삭제에 유용 e.g. 노드와 포인터를 이용한 기관차
* 파이썬의 list는 어레이로 구성돼있지만 상황따라 변함

class안에 존재하는건 닷으로 연결한다 e.g. person_1.talk()
클래스 안의 객체(오브젝트) e.g. 사람 내 유재석, 박명수 / 동물 내 고양이, 강아지
각 개체는 주솟값을 가져서 run하면 그런게 뜨는거임

class Person:
    pass # 여기서 pass 는 안에 아무런 내용이 없다는 의미
    
클래스 내부의 함수는 메소드라고 불린다

연관성 있는 데이터를 클래스내에서 관리하면서 다양한 객체를 쉽게 생성하기 위해서 클래스라는 개념 잘 활용하기

노드 안에는 데이터와 넥스트가 필요하다

무엇이든 n-1  index-1 등: -1이 붙게된다면 0일 경우의 처리는 어떻게할지 생각해보기

break는 가장 가까운 반복문 탈출
return은 함수 탈출 
Continue는 break와 다르게 반복문을 완전히 빠져나가지 않고 반복문 내의 작업문을 건너뛸 때 사용. 다시 말해, '현재 진행 중인 Loop'를 즉시 중단하고 다음 Loop를 진행하라는 구문.


숫자 내림 하는 방법: // 연산자를 이용하면 소수점 이하의 수를 모두 버리고 몫만 나타낼 수 있습니다!
>>> print((4 + 5) / 2)
4.5
>>> print((4 + 5) // 2)

이진탐색을 사용하기 위해선 반드시 규칙으로 정렬이 되어있어야 한다. (.sort())

가나다라마바사: 0번째부터뒤에서두번째전까지 잘라주세여[0:-2] # 가나다라마

문자열 맨 뒤 조회 string[-1]

재귀함수를 쓸때는 항상 탈출루트를 고민해야한다.


<--좀 더 생각해보기-->
한 번 소수의 특징을 다시 생각해볼게요.
주어진 자연수 N이 소수이기 위한 필요충분 조건은 N이 N의 제곱근보다 크지 않은 어떤 소수로도 나눠지지 않는다. 수가 수를 나누면 몫이 발생하게 되는데 몫과 나누는 수, 둘 중 하나는 반드시 N의 제곱근 이하이기 때문입니다.
이를 이용해서 i * i ≤ n 일 때까지만 비교하시면 됩니다!

